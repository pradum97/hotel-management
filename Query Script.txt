DROP TABLE IF EXISTS TBL_SHOP_DETAILS;
DROP TABLE IF EXISTS TBL_MENU;
DROP TABLE IF EXISTS TBL_FEEDBACK;
DROP TABLE IF EXISTS THEME_SETTING;
DROP TABLE IF EXISTS TBL_ROLE;
DROP TABLE IF EXISTS TBL_CART;
DROP TABLE IF EXISTS TBL_PRODUCT_STOCK;
DROP TABLE IF EXISTS TBL_PRODUCTS;
DROP TABLE IF EXISTS TBL_CATEGORY;
DROP TABLE IF EXISTS TBL_DISCOUNT;
DROP TABLE IF EXISTS TBL_PRODUCT_TAX;
DROP TABLE IF EXISTS TBL_INVOICE;
DROP TABLE IF EXISTS TBL_DUES;
DROP TABLE IF EXISTS DUES_HISTORY;
DROP TABLE IF EXISTS TBL_RETURN_MAIN;
DROP TABLE IF EXISTS TBL_RETURN_ITEMS;
DROP TABLE IF EXISTS STOCK_CONTROL;
DROP TABLE IF EXISTS Supplier;
DROP TABLE IF EXISTS PURCHASE_HISTORY;
DROP TABLE IF EXISTS tbl_saleItems;
DROP TABLE IF EXISTS TBL_SALE_MAIN;
DROP TABLE IF EXISTS TBL_USERS;
DROP TABLE IF EXISTS TBL_CUSTOMER;
DROP TABLE IF EXISTS PROPOSAL_ITEMS;
DROP TABLE IF EXISTS PROPOSAL_MAIN;

CREATE TABLE TBL_SHOP_DETAILS
(
    SHOP_NAME       VARCHAR(100) unique NOT NULL,
    SHOP_EMAIL      VARCHAR(100) unique NOT NULL,
    SHOP_PHONE_1    VARCHAR(10) unique  NOT NULL,
    SHOP_PHONE_2    VARCHAR(10),
    SHOP_GST_NUMBER VARCHAR(100),
    SHOP_PROP       VARCHAR(100),
    SHOP_ADDRESS    VARCHAR(200) unique NOT NULL
);

INSERT INTO TBL_SHOP_DETAILS (SHOP_NAME, SHOP_EMAIL, SHOP_PHONE_1, SHOP_PHONE_2,
                              SHOP_GST_NUMBER, SHOP_ADDRESS, SHOP_PROP)
VALUES ('SUMA MARBLE & TIELS', 'devrajimas@gmail.com', 9570294565, 9122383010,
        '10DGBPK6505G1ZY', 'CHHOTI BALLIA, NH-31, EAST OF WATER TANK (BEGUSARAI) , 851211, BIHAR', 'RAJ KUMAR');

CREATE TABLE TBL_CATEGORY
(

    CATEGORY_ID   SERIAL PRIMARY KEY,
    CATEGORY_NAME VARCHAR(150) UNIQUE NOT NULL,
    DESCRIPTION   VARCHAR(300)

);



CREATE TABLE TBL_MENU
(

    MENU_ID        SERIAL PRIMARY KEY,
    MENU_NAME      VARCHAR(30) UNIQUE,
    MENU_LOCATION  VARCHAR(10),
    MENU_ICON_PATH VARCHAR(500)

);

INSERT INTO TBL_MENU(MENU_ICON_PATH, MENU_NAME, MENU_LOCATION)
VALUES ('home_icon.png', 'HOME', 'SIDE'),
       ('shop_icon.png', 'ALL PRODUCTS', 'SIDE'),
       ('sell_ic.png', 'SALE PRODUCTS', 'SIDE'),
       ('viewReport_icon.png', 'SALES REPORT', 'SIDE'),
       ('stock_ic.png', 'STOCK REPORT', 'SIDE'),
       ('return_ic.png', 'RETURN PRODUCT', 'SIDE'),
       ('invoice_ic.png', 'INVOICE', 'SIDE'),
       ('add_icon.png', 'ADD PRODUCT', 'TOP'),
       ('feedback_ic.png', 'FEEDBACK', 'TOP'),
       ('settings_ic.png', 'SETTING', 'TOP'),
       ('enquiry_ic.png', 'PROPOSAL', 'SIDE');

CREATE TABLE TBL_USERS
(
    USER_ID        SERIAL PRIMARY KEY    NOT NULL,
    FIRST_NAME     VARCHAR(15)           NOT NULL,
    LAST_NAME      VARCHAR(15),
    USERNAME       VARCHAR(100)          NOT NULL UNIQUE,
    GENDER         VARCHAR(6)            NOT NULL,
    role_id        integer               NOT NULL,
    EMAIL          VARCHAR(100) UNIQUE   NOT NULL,
    PHONE          bigint UNIQUE         NOT NULL,
    PASSWORD       VARCHAR(200)          NOT NULL,
    FULL_ADDRESS   VARCHAR(200),
    USER_IMG_PATH  TEXT,
    CREATED_TIME   timestamp DEFAULT CURRENT_TIMESTAMP,
    ACCOUNT_STATUS int       default '1' NOT NULL,
    MAC_ADDRESS    VARCHAR(30)           NOT NULL
);


CREATE TABLE TBL_FEEDBACK
(
    FEEDBACK_ID   SERIAL PRIMARY KEY NOT NULL,
    FULL_NAME     VARCHAR(50)        NOT NULL,
    EMAIL         VARCHAR(200),
    PHONE         VARCHAR(15),
    STAR          VARCHAR(200)       NOT NULL,
    MESSAGE       VARCHAR(1000)      NOT NULL,
    FEEDBACK_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP

);


CREATE TABLE THEME_SETTING
(

    THEME_ID          SERIAL PRIMARY KEY NOT NULL,
    THEME_NAME        VARCHAR(100)       NOT NULL,
    CONT_BG_COLOR     CHAR(10)           NOT NULL,
    BUTTON_BG_COLOR   CHAR(10)           NOT NULL,
    BUTTON_TEXT_COLOR CHAR(10)           NOT NULL,
    LABEL_BG_COLOR    CHAR(10)           NOT NULL,
    LABEL_TEXT_COLOR  CHAR(10)           NOT NULL,
    FONT_NAME         VARCHAR(50)        NOT NULL,
    IS_ACTIVE         INT DEFAULT 0      NOT NULL
);


CREATE TABLE TBL_DISCOUNT
(

    DISCOUNT_ID   SERIAL PRIMARY KEY NOT NULL,
    DISCOUNT      NUMERIC            NOT NULL,
    DISCOUNT_NAME VARCHAR(200)       not null,
    description   varchar(200)

);


CREATE TABLE TBL_PRODUCT_TAX
(

    TAX_ID      SERIAL PRIMARY KEY NOT NULL,
    SGST        NUMERIC            NOT NULL,
    CGST        NUMERIC            NOT NULL,
    IGST        NUMERIC            NOT NULL,
    gstName     VARCHAR(100),
    HSN_SAC     NUMERIC UNIQUE     not null,
    DESCRIPTION VARCHAR(200)

);


CREATE TABLE TBL_ROLE
(

    ROLE_ID SERIAL PRIMARY KEY NOT NULL,
    ROLE    VARCHAR(50)

);

INSERT INTO TBL_ROLE (ROLE)
VALUES ('ADMIN'),
       ('SELLER');

CREATE TABLE TBL_PRODUCTS
(
    PRODUCT_ID          SERIAL PRIMARY KEY                  NOT NULL,
    PRODUCT_NAME        VARCHAR(200)                        NOT NULL,
    PRODUCT_DESCRIPTION VARCHAR(1000),
    PRODUCT_COLOR       VARCHAR(50)                         NOT NULL,
    PRODUCT_TYPE        VARCHAR(100)                        NOT NULL,
    CATEGORY_ID         INTEGER                             NOT NULL,
    PRODUCT_CODE        VARCHAR(100) unique                 not null,
    DISCOUNT_ID         INTEGER,
    ADDED_DATE          timestamp default CURRENT_TIMESTAMP not null,
    TAX_ID              INTEGER,

    FOREIGN KEY (CATEGORY_ID)
        REFERENCES tbl_category (CATEGORY_ID),

    FOREIGN KEY (DISCOUNT_ID)
        REFERENCES TBL_DISCOUNT (DISCOUNT_ID),

    FOREIGN KEY (TAX_ID)
        REFERENCES TBL_PRODUCT_TAX (TAX_ID)

);


CREATE TABLE TBL_CART
(

    CART_ID       BIGSERIAL PRIMARY KEY NOT NULL,
    PRODUCT_ID    INTEGER               NOT NULL,
    SELLER_ID     INTEGER               NOT NULL,
    SELLPrice     NUMERIC               NOT NULL,
    STOCK_ID      INTEGER               NOT NULL,
    QUANTITY      NUMERIC               NOT NULL,
    price_type    varchar(50),
    QUANTITY_UNIT VARCHAR(100)          NOT NULL
);

CREATE TABLE TBL_PRODUCT_STOCK
(
    STOCK_ID         SERIAL PRIMARY KEY                  NOT NULL,
    PURCHASE_PRICE   NUMERIC                             NOT NULL,
    PRODUCT_MRP      NUMERIC                             NOT NULL,
    min_sellingPrice NUMERIC                             NOT NULL,
    PRODUCT_ID       INTEGER                             NOT NULL,
    HEIGHT           NUMERIC                             NOT NULL,
    WIDTH            NUMERIC                             NOT NULL,
    QUANTITY         NUMERIC                             NOT NULL,
    STORE_DATE       timestamp default CURRENT_TIMESTAMP not null,
    SIZE_UNIT        VARCHAR(100)                        NOT NULL,
    QUANTITY_UNIT    VARCHAR(100)                        NOT NULL,
    PRICE_TYPE       VARCHAR(20)                         NOT NULL,
    PCS_PER_PACKET   INTEGER                             NOT NULL,
    IS_ACTIVE        INT       DEFAULT 1                 NOT NULL,

    FOREIGN KEY (PRODUCT_ID)
        REFERENCES TBL_PRODUCTS (PRODUCT_ID)

);
CREATE TABLE TBL_CUSTOMER
(
    CUSTOMER_ID      SERIAL PRIMARY KEY                  NOT NULL,
    CUSTOMER_NAME    VARCHAR(100)                        NOT NULL,
    CUSTOMER_PHONE   NUMERIC UNIQUE                      NOT NULL,
    CUSTOMER_ADDRESS VARCHAR(200)                        NOT NULL,
    DUES_AMOUNT      NUMERIC,
    NOTES            VARCHAR(300),
    DESCRIPTION      VARCHAR(300),
    GST_NUMBER       VARCHAR(60),
    registered_date  timestamp default CURRENT_TIMESTAMP NOT NULL
);

CREATE TABLE TBL_SALE_MAIN
(
    SALE_MAIN_ID        SERIAL PRIMARY KEY                  NOT NULL,
    CUSTOMER_ID         INTEGER                             NOT NULL,
    SELLER_ID           INTEGER                             NOT NULL,
    ADDITIONAL_DISCOUNT NUMERIC,
    RECEIVED_AMOUNT     NUMERIC                             NOT NULL,
    PAYMENT_MODE        VARCHAR                             NOT NULL,
    TOT_DISC_AMOUNT     NUMERIC,
    TOT_TAX_AMOUNT      NUMERIC,
    NET_AMOUNT          NUMERIC                             NOT NULL,
    INVOICE_NUMBER      VARCHAR(100)                        NOT NULL,
    BILL_TYPE           VARCHAR(100)                        NOT NULL,
    GST_CLAIMED         NUMERIC,
    sale_date           timestamp default CURRENT_TIMESTAMP NOT NULL,

    FOREIGN KEY (CUSTOMER_ID)
        REFERENCES tbl_customer (CUSTOMER_ID),

    FOREIGN KEY (SELLER_ID)
        REFERENCES tbl_users (user_id)

);
CREATE TABLE tbl_saleItems
(
    SALE_ITEM_ID     BIGSERIAL PRIMARY KEY NOT NULL,
    SALE_MAIN_ID     INTEGER               NOT NULL,
    PRODUCT_ID       INTEGER               NOT NULL,
    STOCK_ID         INTEGER               NOT NULL,
    PRODUCT_NAME     VARCHAR(200)          NOT NULL,
    PRODUCT_COLOR    VARCHAR(100)          NOT NULL,
    PRODUCT_CATEGORY VARCHAR(100)          NOT NULL,
    PRODUCT_TYPE     VARCHAR(100)          NOT NULL,
    PRODUCT_SIZE     VARCHAR(100)          NOT NULL,
    PURCHASE_PRICE   NUMERIC               NOT NULL,
    PRODUCT_MRP      NUMERIC               NOT NULL,
    SELL_PRICE       NUMERIC               NOT NULL,
    PRODUCT_QUANTITY VARCHAR(100)          NOT NULL,
    DISCOUNT_NAME    VARCHAR(100),
    DISCOUNT_AMOUNT  NUMERIC,
    discountPer      numeric,
    PRICE_TYPE       VARCHAR(20)           NOT NULL,
    PCS_PER_PACKET   INTEGER               NOT NULL,
    HSN_SAC          NUMERIC,
    igst             NUMERIC,
    sgst             NUMERIC,
    cgst             NUMERIC,
    NET_AMOUNT       NUMERIC               NOT NULL,
    SALE_DATE        timestamp default CURRENT_TIMESTAMP,
    TAX_AMOUNT       NUMERIC,
    FOREIGN KEY (SALE_MAIN_ID)
        REFERENCES TBL_SALE_MAIN (SALE_MAIN_ID)
);

CREATE TABLE TBL_INVOICE
(

    INVOICE_ID     SERIAL PRIMARY KEY                  NOT NULL,
    INVOICE_DATE   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    INVOICE_NUMBER VARCHAR(100)                        NOT NULL,
    INVOICE_PATH   VARCHAR(500)                        NOT NULL,
    DESCRIPTION    VARCHAR(200),
    SALE_MAIN_ID   INTEGER                             NOT NULL
);

CREATE TABLE TBL_DUES
(

    DUES_ID        SERIAL PRIMARY KEY NOT NULL,
    CUSTOMER_ID    INTEGER            NOT NULL,
    SALE_MAIN_ID   INTEGER            NOT NULL,
    DUES_AMOUNT    NUMERIC,
    DUES_NOTES     VARCHAR(300),
    INVOICE_NUMBER VARCHAR(100),
    PAYMENT_MODE   VARCHAR(50)        NOT NULL,
    LAST_PAYMENT   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CUSTOMER_ID)
        REFERENCES tbl_customer (CUSTOMER_ID)

);

CREATE TABLE DUES_HISTORY
(
    DUES_HISTORY_ID BIGSERIAL PRIMARY KEY NOT NULL,
    DUES_ID         INTEGER               NOT NULL,
    CUSTOMER_ID     INTEGER               NOT NULL,
    SALE_MAIN_ID    INTEGER               NOT NULL,
    PREVIOUS_DUES   NUMERIC               NOT NULL,
    PAID_AMOUNT     NUMERIC               NOT NULL,
    CURRENT_DUES    NUMERIC               NOT NULL,
    PAYMENT_MODE    VARCHAR               NOT NULL,
    PAYMENT_DATE    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,


    FOREIGN KEY (CUSTOMER_ID)
        REFERENCES tbl_customer (CUSTOMER_ID)

);


CREATE TABLE TBL_RETURN_MAIN
(
    RETURN_MAIN_ID      SERIAL PRIMARY KEY,
    SALE_MAIN_ID        INTEGER NOT NULL,
    seller_id           integer not null,
    CREATED_DATE        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    TOTAL_REFUND_AMOUNT NUMERIC NOT NULL,
    OLD_INVOICE_NUMBER  VARCHAR(50),
    INVOICE_NUMBER      TEXT    NOT NULL,
    REMARK              TEXT
);


CREATE TABLE TBL_RETURN_ITEMS
(
    return_items_id SERIAL PRIMARY KEY,
    RETURN_MAIN_ID  INTEGER NOT NULL,
    PRODUCT_ID      INTEGER NOT NULL,
    RETURN_QUANTITY INTEGER NOT NULL,
    SALE_ITEM_ID    INTEGER NOT NULL,
    DISCOUNT_PER    NUMERIC NOT NULL,
    quantity_Unit   varchar(10),
    RATE            NUMERIC NOT NULL
);

CREATE TABLE STOCK_CONTROL
(
    STOCK_CONTROL_ID SERIAL PRIMARY KEY,
    REQUIRED         INTEGER UNIQUE NOT NULL,
    LOW              INTEGER UNIQUE NOT NULL,
    MEDIUM           INTEGER UNIQUE NOT NULL

);

INSERT INTO STOCK_CONTROL(REQUIRED, LOW, MEDIUM)
VALUES (2, 15, 50);

CREATE TABLE Supplier
(
    supplier_id    SERIAL PRIMARY KEY,
    supplier_name  varchar(100) not null,
    supplier_phone varchar(20)  not null,
    supplier_email varchar(100),
    supplier_gstNo varchar(100),
    ADDRESS        TEXT         NOT NULL,
    STATE          VARCHAR(20),
    ADDED_DATE     TIMESTAMP DEFAULT CURRENT_TIMESTAMP

);

CREATE TABLE PURCHASE_HISTORY
(
    PURCHASE_ID    SERIAL PRIMARY KEY,
    supplier_id    INTEGER NOT NULL,
    PRODUCT_ID     INTEGER NOT NULL,
    STOCK_ID       INTEGER NOT NULL,
    SELLER_ID      INTEGER NOT NULL,
    INVOICE_NUM    VARCHAR(30),
    ACTIVITY_TYPE  VARCHAR NOT NULL,
    QUANTITY       VARCHAR NOT NULL,
    PURCHASE_PRICE NUMERIC,
    MRP            NUMERIC,
    MIN_SELL       NUMERIC,
    PURCHASE_DATE  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE PROPOSAL_MAIN
(
    PROPOSAL_MAIN_ID serial primary key not null,
    CUSTOMER_ID      integer            not null,
    SELLER_ID        INTEGER            NOT NULL,
    INVOICE_NUM      VARCHAR(20)        NOT NULL,
    PROPOSAL_DATE    TIMESTAMP DEFAULT CURRENT_TIMESTAMP

);

CREATE TABLE PROPOSAL_ITEMS
(
    PROPOSAL_ITEMS_ID SERIAL PRIMARY KEY,
    PROPOSAL_MAIN_ID  INTEGER      NOT NULL,
    PRODUCT_ID        INTEGER      NOT NULL,
    SELLPrice         NUMERIC      NOT NULL,
    STOCK_ID          INTEGER      NOT NULL,
    QUANTITY          NUMERIC      NOT NULL,
    price_type        varchar(50),
    QUANTITY_UNIT     VARCHAR(100) NOT NULL
);


CREATE TABLE IF NOT EXISTS TBL_LICENSE
(
    LICENSE_ID          SERIAL PRIMARY KEY,
    COMPANY_ID          INT     unique     NOT NULL,
    APPLICATION_ID      VARCHAR(50) unique NOT NULL,
    SERIAL_KEY          VARCHAR(100) unique NOT NULL,
    START_ON            VARCHAR(20)  NOT NULL,
    EXPIRES_ON          VARCHAR(20)  NOT NULL,
    LICENSE_TYPE        VARCHAR(50)  NOT NULL,
    LICENSE_PERIOD_DAYS INTEGER      NOT NULL,
    REGISTERED_EMAIL    VARCHAR(100) NOT NULL
);

CREATE TABLE TBL_COLOR(
    COLOR_ID SERIAL PRIMARY KEY ,
    COLOR_NAME VARCHAR(100) NOT NULL
);
insert into tbl_color(color_name)
            values ('White'),('Dark grey'),('Blue'),
                   ('Brown'),('Black'),('Gold'),('Orange'),('Red'),
                   ('Green'),('Black porcelain'),('Multicolour'),('Other');

